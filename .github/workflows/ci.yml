name: CI

on:
  pull_request:
  push:
    branches: [main]

jobs:
  healthcheck:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 20
      - name: Cache backend dependencies
        uses: actions/cache@v3
        with:
          path: backend/node_modules
          key: backend-node-${{ runner.os }}-${{ hashFiles('backend/package.json') }}
          restore-keys: |
            backend-node-${{ runner.os }}-
      - name: Cache client dependencies
        uses: actions/cache@v3
        with:
          path: client/node_modules
          key: client-node-${{ runner.os }}-${{ hashFiles('client/package.json') }}
          restore-keys: |
            client-node-${{ runner.os }}-
      - name: Install and build backend
        working-directory: backend
        run: |
          npm install
          npm run build
      - name: Install and build client
        working-directory: client
        run: |
          npm install
          npm run build
      - name: Start services
        run: docker compose up -d --build db redis api
      - name: Test health endpoint
        run: ./scripts/test_health.sh
      - name: Stop services
        if: always()
        run: docker compose down
